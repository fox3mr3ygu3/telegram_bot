from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from bot import parser, top
from config import bot_token


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /–°–µ—Ä–≤–µ—Ä –∏ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–µ—Ä–≤–µ—Ä"
def handle_message(update: Update, context: CallbackContext) -> None:
    user_text = update.message.text.strip().lower() 
    result = None
    if user_text in ["—Å–µ—Ä–≤–µ—Ä", "server"]:
        result = parser()
         
    elif user_text in ["—Ç–æ–ø", "top"]:
        result = top()
         
    if not result:
        return

    if len(result) > 4000:
        for i in range(0, len(result), 4000):
            update.message.reply_text(result[i:i+4000])
    else:
        update.message.reply_text(result)

def main():
    # –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
    TOKEN = bot_token

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
    updater = Updater(TOKEN, use_context=True)
    dispatcher = updater.dispatcher

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    # –ó–∞–ø—É—Å–∫
    updater.start_polling()
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è.")
    updater.idle()

if __name__ == "__main__":
    main()
